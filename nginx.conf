
#user  nobody;
worker_processes  1;

error_log  logs/error.log debug;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    lua_package_path '/usr/local/openresty/nginx/lua/?.lua;/usr/local/openresty/nginx/lua/common/?.lua;/usr/local/openresty/nginx/lua/resty/?.lua;;';

    server_tokens off; 

    gzip on;
    gzip_min_length 1k;
    gzip_buffers 4 16k;
    #gzip_http_version 1.0;
    gzip_comp_level 2;
    gzip_types text/plain application/x-javascript text/css application/xml text/javascript application/x-httpd-php image/jpeg image/gif image/png;
    gzip_vary off;
    gzip_disable "MSIE [1-6]\.";
    
    upstream backend {
        server 192.168.68.133:8080 weight=20; 
        server 192.168.68.133:8081 weight=10; 
    }

    upstream memcacheds {
        server 127.0.0.1:11211;
    }
    
    server {
        listen       8888;

        location /main {
            jitp;
            jitp_upstream_location /jitp_hls; 
        }

        location /jitp_hls {
            proxy_buffering on;
            proxy_buffer_size 16M;
            proxy_buffers 4 16M;
            proxy_busy_buffers_size 16M;

            proxy_pass http://192.168.68.133:8080;
        }
    }
    
    server {
        listen       8080;

        location / {
            default_type text/html;
            content_by_lua_block {
                ngx.say("jitp: " .. ngx.var.uri .. " 8080");
            }
        }
    }
    
    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}
}
